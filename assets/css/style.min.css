header .container,nav ul{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox}.container h1,body,nav ul a{font-weight:700}*{box-sizing:border-box;-webkit-font-smoothing:antialiased}body{margin:0;font-family:'PT Sans',sans-serif;background-image:url(../images/burger.gif)}.container .wrapper h1,.container h1{font-family:'PT Sans Narrow',sans-serif}li,p{line-height:1.5}.container{max-width:1000px;margin:0 auto;padding:0 1em}.container h1{background:#ffc0a9;color:#fff;padding:1em}@media (max-width:62em){.container{max-width:46em}}@media (max-width:75em){.container{max-width:60em}}@media (min-width:75em){.container{max-width:73em}}header .container{display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}nav ul{display:flex;list-style:none}nav ul li{margin-left:2em}nav ul a{text-decoration:none;color:#000;padding:1em 2em}nav ul a:hover{color:grey;-webkit-transition:color .5s;transition:color .5s}.container .wrapper{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;height:100%;width:100%;text-align:center;margin:0 auto}.container .wrapper h1{font-size:4em;color:#fff}.hvr-line{display:inline-block;vertical-align:middle;-webkit-transform:translateZ(0);transform:translateZ(0);box-shadow:0 0 1px transparent;-webkit-backface-visibility:hidden;backface-visibility:hidden;position:relative;overflow:hidden}.hvr-line:before{content:"";position:absolute;z-index:-1;left:0;right:100%;bottom:0;background:#ffd3c3;height:3px;-webkit-transition-property:right;transition-property:right;-webkit-transition-duration:.33s;transition-duration:.33s;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out}.hvr-line:active:before,.hvr-line:focus:before,.hvr-line:hover:before{right:0}
/*# sourceMappingURL=data:application/json;base64, */