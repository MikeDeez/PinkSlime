*{box-sizing:border-box;-webkit-font-smoothing:antialiased}body{margin:0;font-family:'PT Sans',sans-serif;font-weight:700;background-image:url(../images/burger.gif);background-size:120px;width:100%;height:auto}body:before{content:"";position:fixed;width:200%;height:200%;top:-50%;left:-50%;z-index:-1;background:url(../images/burger.gif);-webkit-transform:rotate(-30deg);-ms-transform:rotate(-30deg);transform:rotate(-30deg)}li,p{line-height:1.5}.container{max-width:960px;margin:0 auto;padding:1em}.container h1{font-family:'PT Sans Narrow',sans-serif;font-weight:700}@media (max-width:62em){.container{max-width:46em}}@media (max-width:75em){.container{max-width:60em}}@media (min-width:75em){.container{max-width:73em}}header .container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;position:relative;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}.logo,.logo-bar{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;position:fixed;padding:1em}.logo{display:flex;margin:1em;background:#ffc0a9;color:#fff;font-size:1.5em;letter-spacing:2px}.logo-bar{display:flex;top:209px;left:95px;width:244px;background:#fff;color:#000;letter-spacing:1px}.geoloc-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin-top:.5em;margin-left:5em;font-family:'PT Sans',sans-serif;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;text-align:center}.geoloc-container .wrapper{background:#ffc0a9;width:500px;color:#fff}
/*# sourceMappingURL=data:application/json;base64, */